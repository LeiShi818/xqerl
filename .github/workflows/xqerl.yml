name: xqerl
on: [push]
jobs:
  # spec_tests:
  #   runs-on: ubuntu-latest
  #   container:
  #       image: erlang:22.0.7
  #   steps:
  #   - name: Checkout Repo
  #     uses: actions/checkout@v1
  #     with:
  #       fetch-depth: 1
      # - name: Compile Xqerl
      # run: rebar3 compile
  #   - name: spec tests
  #     run: rebar3 ct --spec "test/test.specs"
  build:
    runs-on: ubuntu-latest
    # container:
    #     image: erlang:22.0.7
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: compile xqerl
      run: rebar3 compile
    - name: create xqerl release
      run: |
          sudo chown -R $USER /usr/local
          rebar3 release -o /usr/local
          printf %60s | tr ' ' '-' && echo
          ln -s /usr/local/xqerl/bin/xqerl /usr/local/bin/xqerl
          printf %60s | tr ' ' '-' && echo
          which xqerl
          printf %60s | tr ' ' '-' && echo
    - name: start up xqerl
      run: xqerl start
    - name: on the beam inspection 
      run: |
          sleep 5
          echo -n '-  ping: ' 
          xqerl ping | grep -oP 'pong'
          echo -n '-  pid: ' 
          xqerl pid | grep -oP '\d+'
    - name: can do
      run: |
          printf %60s | tr ' ' '-' && echo
          echo ' - run a xQuery expression'
          xqerl eval 'xqerl:run("xs:token(\"cats\"), xs:string(\"dogs\"), true() ").' | grep -oP '^\[\{xq.+$'
          printf %60s | tr ' ' '-' && echo
          echo ' - compile an xQuery file'
          xqerl eval 'xqerl:compile("docs/src/sudoku2.xq").'
          printf %60s | tr ' ' '-' && echo
          echo ' - compile and run then grep the title'
          xqerl eval 'S = xqerl:compile("docs/src/sudoku2.xq"),xqerl_node:to_xml(S:main(#{})).' | \
          grep -oP '<title>(.+)</title>'
          printf %60s | tr ' ' '-' && echo
    - name: start up xqerl
      run: xqerl stop


