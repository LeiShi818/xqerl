{
	"ns": "http://xqerl.org/modules/actor",
	"px": "actor",
	"desc": "<div><p>Module for spawning processes mid-query and asynchronous message-passing between these processes.</p><pre>(: Save the address of the current actor :)<br>let $replyTo := actor:self()<br>(: Spawn 10,000 child actors and save their addresses in $children :)<br>let $children := (<br>    for $a in 1 to 10000<br>    (: Build a 0-arity function to spawn  :)<br>    let $fun := <br>      function()<br>        {<br>          (: Build a nice message and send it to the actor addressed by $replyTo :)<br>          let $cmt := ``[From `{ $a }`: Hi, my name is `{ actor:self() }`.]``<br>          return<br>            actor:send($replyTo, $cmt)<br>        }<br>    return<br>      (: Spawn the actor :)<br>      actor:spawn($fun)<br>  )<br>return<br>  (: Collect the responses sent to this actor by their 'from' address<br>     These will be in the order sent :)<br>  $children ! actor:receive(.)<br>  (: $children ! actor:receive() would return in a possibly different order<br>     as the messages would be taken in the order received and not by address :)</pre></div>",
	"fx": [
		{
			"name": "spawn",
			"sigs": [
				{
					"params": [
						{
							"name": "fun",
							"type": "function() as item()*"
						}
					],
					"type": "xs:base64Binary"
				}
			],
			"desc": "Spawns a child actor that begins executing the 0-arity function passed to it. Returns the address of the child actor."
		},
		{
			"name": "self",
			"sigs": [
				{
					"params": [],
					"type": "xs:base64Binary"
				}
			],
			"desc": "Returns the address of the actor executing the function."
		},
		{
			"name": "parent",
			"sigs": [
				{
					"params": [],
					"type": "xs:base64Binary?"
				}
			],
			"desc": "Returns the address of the actor which spawned the current actor, or the empty-sequence if this is the root actor."
		},
		{
			"name": "send",
			"sigs": [
				{
					"params": [
						{
							"name": "address",
							"type": "xs:base64Binary"
						},
						{
							"name": "payload",
							"type": "item()*"
						}
					],
					"type": "empty-sequence()"
				}
			],
			"desc": "Sends an asynchronous message containing <code>$payload</code> to <code>$address</code>."
		},
		{
			"name": "receive",
			"sigs": [
				{
					"params": [],
					"type": "item()*"
				},
				{
					"params": [
						{
							"name": "from",
							"type": "xs:base64Binary"
						}
					],
					"type": "item()*"
				},
				{
					"params": [
						{
							"name": "from",
							"type": "xs:base64Binary"
						},
						{
							"name": "timeout",
							"type": "xs:integer"
						}
					],
					"type": "item()*"
				}
			],
			"desc": "Receives a message. When no parameters are given, receives the next message in the queue. When <code>$from</code> is given, will block until a message from that actor is received (optionally with a timeout in milliseconds). Upon timeout, an error will be raised."
		}
	]
}
